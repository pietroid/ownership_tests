## This workflow is already triggered by the push to development from the first part of the release process.
name: Propose changes for new release 

on:
  workflow_dispatch:
  push:
    branches:
      - development
    paths:
      - 'version.txt'

permissions:
  contents: write
  pull-requests: write

jobs:
  setup-release:
    name: Create release-candidate proposal
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      ## This is for cases where version is bumped on hotfixes and comes from main branch.
      - name: Skip of tag already exists
        run: |
          git fetch --tags
          version=$(cat version.txt)
          if git rev-parse "v$version" >/dev/null 2>&1; then
            echo "Tag v$version already exists. Skipping release proposal."
            exit 0
          else
            echo "Tag v$version does not exist. Proceeding..."
          fi

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create proposed-release-candidate branch
        run: |
          git checkout development
          git pull origin development
          git checkout -b proposed-release-candidate
          git push origin proposed-release-candidate --force

      - name: Create PR (proposed-release-candidate â†’ release-candidate)
        run: |
          # Close existing PR if it exists
          existing_pr=$(gh pr list -B release-candidate -H proposed-release-candidate --json number --jq '.[0].number')
          if [ -n "$existing_pr" ]; then
            gh pr close "$existing_pr"
          fi

          CURRENT_VERSION=$(cat version.txt)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

          gh pr create -B release-candidate -H proposed-release-candidate --title "New release proposal: $CURRENT_VERSION" --body "What the next release will look like."
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}